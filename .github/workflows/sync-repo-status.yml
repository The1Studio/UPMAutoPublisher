name: Auto-Sync Repository Status

# Automatically updates repository status from "pending" to "active" when workflow is deployed
on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'

  workflow_dispatch:  # Allow manual trigger

  # Also run after register-repos completes
  workflow_run:
    workflows: ["Auto-Register Repositories"]
    types: [completed]

permissions:
  contents: write  # Need to commit updated repositories.json

jobs:
  sync-status:
    # Use ARC self-hosted runners for The1Studio organization
    # Labels: self-hosted, linux, x64, arc, the1studio, org
    runs-on: [self-hosted, arc, the1studio, org]
    name: Auto-update repository statuses

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup dependencies
        run: |
          # Fix APT sources to use HTTPS instead of HTTP (port 80 blocked)
          sudo sed -i 's|http://archive.ubuntu.com|https://archive.ubuntu.com|g' /etc/apt/sources.list
          sudo sed -i 's|http://security.ubuntu.com|https://security.ubuntu.com|g' /etc/apt/sources.list

          # Disable PPA repositories (have invalid HTTPS certificates)
          sudo mv /etc/apt/sources.list.d /etc/apt/sources.list.d.bak 2>/dev/null || true
          sudo mkdir -p /etc/apt/sources.list.d

          sudo apt-get update
          sudo apt-get install -y jq

          # Install GitHub CLI from official source (not in main repos)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Sync repository statuses
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          set -euo pipefail

          echo "========================================="
          echo "üîÑ Auto-Syncing Repository Statuses"
          echo "========================================="

          # Check if there are any pending repos
          pending_count=$(jq '[.repositories[] | select(.status == "pending")] | length' config/repositories.json)

          if [ "$pending_count" -eq 0 ]; then
            echo "‚ÑπÔ∏è  No pending repositories to sync"
            exit 0
          fi

          echo "üìã Found $pending_count pending repositories"
          echo ""

          # Track changes
          changes_made=false
          updated_repos=""

          # Read all repositories
          repos_json=$(jq -c '.repositories[]' config/repositories.json)

          # Process each repository
          echo "$repos_json" | while IFS= read -r repo_json; do
            status=$(echo "$repo_json" | jq -r '.status')
            repo_url=$(echo "$repo_json" | jq -r '.url')

            # Only process pending repos
            if [ "$status" != "pending" ]; then
              continue
            fi

            # Extract org and repo from URL
            if [[ "$repo_url" =~ ^https://github\.com/([a-zA-Z0-9_-]+)/([a-zA-Z0-9._-]+)$ ]]; then
              org="${BASH_REMATCH[1]}"
              repo="${BASH_REMATCH[2]}"
            else
              echo "‚ö†Ô∏è  Invalid URL: $repo_url"
              continue
            fi

            echo "üîç Checking ${org}/${repo}..."

            # Check if workflow file exists in the repository
            if gh api "repos/${org}/${repo}/contents/.github/workflows/publish-upm.yml" >/dev/null 2>&1; then
              echo "  ‚úÖ Workflow file exists - updating status to 'active'"

              # Update the JSON file
              jq --arg url "$repo_url" \
                 '(.repositories[] | select(.url == $url) | .status) = "active"' \
                 config/repositories.json > config/repositories.json.tmp

              mv config/repositories.json.tmp config/repositories.json

              changes_made=true
              updated_repos="${updated_repos}  - ${org}/${repo}\n"
            else
              echo "  ‚è≥ Workflow not yet deployed - keeping status as 'pending'"
            fi
          done

          # Check if changes were made
          if git diff --quiet config/repositories.json; then
            echo ""
            echo "‚ÑπÔ∏è  No status changes needed"
            exit 0
          fi

          echo ""
          echo "========================================="
          echo "üìù Committing Status Updates"
          echo "========================================="

          # Configure git
          git config user.name "UPM Auto Publisher Bot"
          git config user.email "noreply@the1studio.org"

          # Commit changes
          git add config/repositories.json
          git commit -m "chore: Auto-update repository statuses to 'active'" \
                     -m "" \
                     -m "Automatically detected deployed workflows and updated statuses." \
                     -m "" \
                     -m "ü§ñ Generated with [Claude Code](https://claude.com/claude-code)" \
                     -m "" \
                     -m "Co-Authored-By: Claude <noreply@anthropic.com>"

          # Push changes
          echo "‚¨ÜÔ∏è  Pushing changes..."
          git push origin master || git push origin main

          echo ""
          echo "‚úÖ Status sync completed successfully"

      - name: Summary
        if: always()
        run: |
          if [ "${{ job.status }}" == 'success' ]; then
            echo "‚úÖ Repository status sync completed"
          else
            echo "‚ö†Ô∏è  Status sync encountered issues - check logs above"
          fi
